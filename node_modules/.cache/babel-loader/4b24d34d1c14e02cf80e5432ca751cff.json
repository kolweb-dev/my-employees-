{"ast":null,"code":"var _jsxFileName = \"D:\\\\Star-db\\\\my-app\\\\src\\\\component\\\\app\\\\app.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport Loader from \"../Loader\";\nimport { loadUsers } from \"../UsersStore\";\nimport PropTypes from 'prop-types';\nimport './app.css';\nimport EmployeeBirthdayList from \"../EmployeerBirthdayList\";\nimport User from \"../User\"; // const App2 = ({users, isLoading, hasError,loadUsers}) => {\n//\n//      useEffect( () => {\n//\n//          (async function (){\n//              await loadUsers();\n//          }())\n//\n//     }, [loadUsers])\n//\n//     if (isLoading) {\n//         return <Loader/>\n//     }\n//     if (hasError) {\n//         return <p>Error occurred!!!</p>\n//     }\n//\n//     return(\n//         <div className='container'>\n//\n//             <h1>Products</h1>\n//             {\n//                 users.map(el => (\n//                     <p key={el.id}>\n//                         {\n//                             el.firstName\n//                         }\n//                     </p>\n//                 ))\n//             }\n//         </div>\n//     )\n//\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  async componentDidMount() {\n    await this.props.loadUsers();\n  }\n\n  render() {\n    const {\n      users,\n      isLoading,\n      hasError\n    } = this.props;\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (hasError) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Error occurred!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Employee\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Employee-left\",\n          children: /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EmployeeBirthdayList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  isLoading: state.isLoading,\n  hasError: state.hasError\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadUsers: () => dispatch(loadUsers())\n});\n\nApp.defaultProps = {\n  users: []\n};\nApp.protoType = {\n  users: PropTypes.arrayOf(PropTypes.object),\n  isLoading: PropTypes.bool.isRequired,\n  hasError: PropTypes.bool.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["D:/Star-db/my-app/src/component/app/app.js"],"names":["React","connect","Loader","loadUsers","PropTypes","EmployeeBirthdayList","User","App","Component","componentDidMount","props","render","users","isLoading","hasError","mapStateToProps","state","mapDispatchToProps","dispatch","defaultProps","protoType","arrayOf","object","bool","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAAQC,SAAR,QAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,WAAP;AACA,OAAOC,oBAAP,MAAiC,0BAAjC;AACA,OAAOC,IAAP,MAAiB,SAAjB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAGA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAEP,QAAjBC,iBAAiB,GAAG;AACtB,UAAM,KAAKC,KAAL,CAAWP,SAAX,EAAN;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA,SAAR;AAAmBC,MAAAA;AAAnB,QAA+B,KAAKJ,KAA1C;;AAEA,QAAIG,SAAJ,EAAe;AACX,0BAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,QAAIC,QAAJ,EAAc;AACV,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AA7B6B;;AAgClC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCJ,EAAAA,KAAK,EAAEI,KAAK,CAACJ,KADmB;AAEhCC,EAAAA,SAAS,EAAEG,KAAK,CAACH,SAFe;AAGhCC,EAAAA,QAAQ,EAAEE,KAAK,CAACF;AAHgB,CAAZ,CAAxB;;AAMA,MAAMG,kBAAkB,GAAIC,QAAD,KAAe;AACtCf,EAAAA,SAAS,EAAE,MAAMe,QAAQ,CAACf,SAAS,EAAV;AADa,CAAf,CAA3B;;AAGAI,GAAG,CAACY,YAAJ,GAAmB;AACfP,EAAAA,KAAK,EAAE;AADQ,CAAnB;AAIAL,GAAG,CAACa,SAAJ,GAAgB;AACZR,EAAAA,KAAK,EAAER,SAAS,CAACiB,OAAV,CAAkBjB,SAAS,CAACkB,MAA5B,CADK;AAEZT,EAAAA,SAAS,EAAET,SAAS,CAACmB,IAAV,CAAeC,UAFd;AAGZV,EAAAA,QAAQ,EAAEV,SAAS,CAACmB,IAAV,CAAeC;AAHb,CAAhB;AAOA,eAAevB,OAAO,CAACc,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,GAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Loader from \"../Loader\";\r\nimport {loadUsers} from \"../UsersStore\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './app.css';\r\nimport EmployeeBirthdayList from \"../EmployeerBirthdayList\";\r\nimport User from \"../User\";\r\n\r\n// const App2 = ({users, isLoading, hasError,loadUsers}) => {\r\n//\r\n//      useEffect( () => {\r\n//\r\n//          (async function (){\r\n//              await loadUsers();\r\n//          }())\r\n//\r\n//     }, [loadUsers])\r\n//\r\n//     if (isLoading) {\r\n//         return <Loader/>\r\n//     }\r\n//     if (hasError) {\r\n//         return <p>Error occurred!!!</p>\r\n//     }\r\n//\r\n//     return(\r\n//         <div className='container'>\r\n//\r\n//             <h1>Products</h1>\r\n//             {\r\n//                 users.map(el => (\r\n//                     <p key={el.id}>\r\n//                         {\r\n//                             el.firstName\r\n//                         }\r\n//                     </p>\r\n//                 ))\r\n//             }\r\n//         </div>\r\n//     )\r\n//\r\n// }\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    async componentDidMount() {\r\n        await this.props.loadUsers();\r\n    }\r\n\r\n    render() {\r\n        const {users, isLoading, hasError} = this.props;\r\n\r\n        if (isLoading) {\r\n            return <Loader/>\r\n        }\r\n        if (hasError) {\r\n            return <p>Error occurred!!!</p>\r\n        }\r\n\r\n        return (\r\n            <div className='container'>\r\n                <div className='Employee'>\r\n                    <div className='Employee-left'>\r\n                        <User/>\r\n\r\n                    </div>\r\n                    <EmployeeBirthdayList/>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.users,\r\n    isLoading: state.isLoading,\r\n    hasError: state.hasError\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    loadUsers: () => dispatch(loadUsers())\r\n})\r\nApp.defaultProps = {\r\n    users: [],\r\n}\r\n\r\nApp.protoType = {\r\n    users: PropTypes.arrayOf(PropTypes.object),\r\n    isLoading: PropTypes.bool.isRequired,\r\n    hasError: PropTypes.bool.isRequired\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}