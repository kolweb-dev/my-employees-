{"ast":null,"code":"var _jsxFileName = \"D:\\\\Star-db\\\\my-app\\\\src\\\\component\\\\Emoloyees\\\\Employees.jsx\";\nimport React from \"react\";\nimport './Employees.css';\nimport User from \"../User\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Employees = ({\n  users,\n  addActiveUser,\n  removeActiveUser\n}) => {\n  let arr_EN = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n  users.sort((a, b) => {\n    let lastNameA = a.lastName.toLowerCase();\n    let lastNameB = b.lastName.toLowerCase();\n\n    if (lastNameA < lastNameB) {\n      return -1;\n    }\n\n    if (lastNameA > lastNameB) {\n      return 1;\n    }\n\n    return 0;\n  });\n  let arr = [];\n  arr_EN.forEach(el => {\n    arr.push({\n      [el]: [...users].filter(user => user.lastName[0] === el)\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Employees\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employees\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Employees__inner\",\n      children: arr.map((el, index) => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Employee__item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: arr_EN[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"Employees__list\",\n            children: el[arr_EN[index]].length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"not-users\",\n              children: \" ----- \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 38\n            }, this) : el[arr_EN[index]].map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"Employees__list-li\",\n              children: /*#__PURE__*/_jsxDEV(User, {\n                user: user,\n                addActiveUser: addActiveUser,\n                removeActiveUser: removeActiveUser\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 49\n              }, this)\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Employees;\nexport default Employees; // <ul className='Employees__list' >\n//     {\n//         (el.length === 0) ?\n//             (<li> ----- </li>):(\n//                 el[arr_EN[index]].map(user => (\n//                     <li key={user.id} className='Employees__list-li'>\n//                         <User\n//                             user={user}\n//                             addActiveUser={addActiveUser}\n//                             removeActiveUser={removeActiveUser}\n//                         />\n//                     </li>\n//                 ))\n//             )\n//     }\n//\n// </ul>\n// arr.map((el,index) => {\n//     // console.log(el[arr_EN[index]].length)\n//     if (el[arr_EN[index]].length === 0){\n//         return (<li>\n//             ----\n//         </li>)\n//     }else {\n//\n//         return (\n//\n//         )\n//     }\n//\n// })\n\nvar _c;\n\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"sources":["D:/Star-db/my-app/src/component/Emoloyees/Employees.jsx"],"names":["React","User","Employees","users","addActiveUser","removeActiveUser","arr_EN","sort","a","b","lastNameA","lastName","toLowerCase","lastNameB","arr","forEach","el","push","filter","user","map","index","length","id"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport './Employees.css';\r\nimport User from \"../User\";\r\n\r\n\r\nconst Employees = ({users, addActiveUser, removeActiveUser}) => {\r\n    let arr_EN = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\n    users.sort((a, b) => {\r\n        let lastNameA = a.lastName.toLowerCase();\r\n        let lastNameB = b.lastName.toLowerCase();\r\n\r\n        if (lastNameA < lastNameB) {\r\n            return -1;\r\n        }\r\n        if (lastNameA > lastNameB) {\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    });\r\n\r\n\r\n\r\n\r\n    let arr = [];\r\n    arr_EN.forEach((el) => {\r\n        arr.push({\r\n            [el]:[...users].filter((user) => user.lastName[0] === el)\r\n        })\r\n    })\r\n\r\n\r\n    return (\r\n        <div className='Employees'>\r\n            <h2>Employees</h2>\r\n            <div className='Employees__inner'>\r\n                {\r\n\r\n                    arr.map((el,index) => {\r\n                        \r\n                        return(\r\n                            <span className='Employee__item'>\r\n                            <h2>{arr_EN[index]}</h2>\r\n                        <ul className='Employees__list' >\r\n                            {\r\n                                (el[arr_EN[index]].length === 0) ?\r\n                                    (<li className='not-users'> ----- </li>):(\r\n                                        el[arr_EN[index]].map(user => (\r\n                                            <li key={user.id} className='Employees__list-li'>\r\n                                                <User\r\n                                                    user={user}\r\n                                                    addActiveUser={addActiveUser}\r\n                                                    removeActiveUser={removeActiveUser}\r\n                                                />\r\n                                            </li>\r\n                                        ))\r\n                                    )\r\n                            }\r\n\r\n                        </ul>\r\n                        </span>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Employees;\r\n\r\n// <ul className='Employees__list' >\r\n//     {\r\n//         (el.length === 0) ?\r\n//             (<li> ----- </li>):(\r\n//                 el[arr_EN[index]].map(user => (\r\n//                     <li key={user.id} className='Employees__list-li'>\r\n//                         <User\r\n//                             user={user}\r\n//                             addActiveUser={addActiveUser}\r\n//                             removeActiveUser={removeActiveUser}\r\n//                         />\r\n//                     </li>\r\n//                 ))\r\n//             )\r\n//     }\r\n//\r\n// </ul>\r\n\r\n// arr.map((el,index) => {\r\n//     // console.log(el[arr_EN[index]].length)\r\n//     if (el[arr_EN[index]].length === 0){\r\n//         return (<li>\r\n//             ----\r\n//         </li>)\r\n//     }else {\r\n//\r\n//         return (\r\n//\r\n//         )\r\n//     }\r\n//\r\n// })"]},"metadata":{},"sourceType":"module"}