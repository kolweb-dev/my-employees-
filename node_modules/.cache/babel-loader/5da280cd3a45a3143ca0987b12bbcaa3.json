{"ast":null,"code":"var _jsxFileName = \"D:\\\\Star-db\\\\my-app\\\\src\\\\component\\\\app\\\\app.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport Loader from \"../Loader\";\nimport { loadUsers } from \"../UsersStore\";\nimport PropTypes from 'prop-types';\nimport './app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  async componentDidMount() {\n    await this.props.loadUsers();\n    console.log('finish');\n  }\n\n  render() {\n    const {\n      users,\n      isLoading,\n      hasError\n    } = this.props;\n    console.log(users);\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (hasError) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Error occurred!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), users.map(el => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: el.firstName\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  isLoading: state.isLoading,\n  hasError: state.hasError\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadUsers: () => dispatch(loadUsers())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\nApp.prototype = {};","map":{"version":3,"sources":["D:/Star-db/my-app/src/component/app/app.js"],"names":["React","connect","Loader","loadUsers","PropTypes","App","Component","componentDidMount","props","console","log","render","users","isLoading","hasError","map","el","firstName","id","mapStateToProps","state","mapDispatchToProps","dispatch","prototype"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAAQC,SAAR,QAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAGP,QAAjBC,iBAAiB,GAAG;AACtB,UAAM,KAAKC,KAAL,CAAWL,SAAX,EAAN;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA,SAAR;AAAmBC,MAAAA;AAAnB,QAA+B,KAAKN,KAA1C;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;;AACA,QAAIC,SAAJ,EAAe;AACX,0BAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,QAAIC,QAAJ,EAAc;AACV,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAIQF,KAAK,CAACG,GAAN,CAAUC,EAAE,iBACR;AAAA,kBAEQA,EAAE,CAACC;AAFX,SAAQD,EAAE,CAACE,EAAX;AAAA;AAAA;AAAA;AAAA,cADJ,CAJR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AAlC6B;;AAqClC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCR,EAAAA,KAAK,EAAEQ,KAAK,CAACR,KADmB;AAEhCC,EAAAA,SAAS,EAAEO,KAAK,CAACP,SAFe;AAGhCC,EAAAA,QAAQ,EAAEM,KAAK,CAACN;AAHgB,CAAZ,CAAxB;;AAMA,MAAMO,kBAAkB,GAAIC,QAAD,KAAe;AACtCnB,EAAAA,SAAS,EAAE,MAAMmB,QAAQ,CAACnB,SAAS,EAAV;AADa,CAAf,CAA3B;;AAIA,eAAeF,OAAO,CAACkB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChB,GAA7C,CAAf;AAEAA,GAAG,CAACkB,SAAJ,GAAgB,EAAhB","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Loader from \"../Loader\";\r\nimport {loadUsers} from \"../UsersStore\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport './app.css';\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n    async componentDidMount() {\r\n        await this.props.loadUsers();\r\n        console.log('finish')\r\n    }\r\n\r\n    render() {\r\n        const {users, isLoading, hasError} = this.props;\r\n\r\n        console.log(users)\r\n        if (isLoading) {\r\n            return <Loader/>\r\n        }\r\n        if (hasError) {\r\n            return <p>Error occurred!!!</p>\r\n        }\r\n\r\n        return (\r\n            <div className='container'>\r\n\r\n                <h1>Products</h1>\r\n                {\r\n                    users.map(el => (\r\n                        <p key={el.id}>\r\n                            {\r\n                                el.firstName\r\n                            }\r\n                        </p>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.users,\r\n    isLoading: state.isLoading,\r\n    hasError: state.hasError\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    loadUsers: () => dispatch(loadUsers())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\nApp.prototype = {\r\n    \r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}