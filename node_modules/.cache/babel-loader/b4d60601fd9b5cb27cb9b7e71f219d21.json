{"ast":null,"code":"var _jsxFileName = \"D:\\\\Star-db\\\\my-app\\\\src\\\\component\\\\User\\\\User.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport './User.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst User = ({\n  firstName,\n  lastName,\n  addActiveUser\n}) => {\n  _s();\n\n  const [isChecked, setIsChecked] = useState('active');\n  const ref = useRef(null);\n  let user = `${firstName}${lastName}`;\n  let labelForInputActive = Math.random();\n  let labelForInputNotActive = Math.random();\n\n  const activeUser = () => {\n    let current = ref.current;\n\n    if (!current.classList.contains('active-text')) {\n      return current.classList.add('active-text');\n    }\n\n    return current.classList.remove('active-text');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"User\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"User__title\",\n      ref: ref,\n      children: `${firstName} ${lastName}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"User_radio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(User, \"uvHLfTbzGNKvEjIkybHnXrju2yM=\");\n\n_c = User;\nexport default User; // <label htmlFor={labelForInputActive}>\n//     <input type=\"radio\"\n//            id={labelForInputActive}\n//            name='BIRTH'\n//            value='active'\n//            placeholder='gfrgf'\n//            checked={isChecked === 'active'}\n//            onChange={(e) => {\n//                setIsChecked(e.target.value);\n//                activeUser();\n//            }}\n//     />\n//     not active\n// </label>\n// <label htmlFor={labelForInputNotActive}>\n//     <input type=\"radio\"\n//            id={labelForInputNotActive}\n//            name='BIRTH'\n//            value='notActive'\n//            checked={isChecked === 'notActive'}\n//            onClick={(e) => {\n//                setIsChecked(e.target.value)\n//                activeUser();\n//            }}\n//     />\n//     active\n// </label>\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["D:/Star-db/my-app/src/component/User/User.jsx"],"names":["React","useState","useRef","User","firstName","lastName","addActiveUser","isChecked","setIsChecked","ref","user","labelForInputActive","Math","random","labelForInputNotActive","activeUser","current","classList","contains","add","remove"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAsC,OAAtC;AAEA,OAAO,YAAP;;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,QAAZ;AAAqBC,EAAAA;AAArB,CAAD,KAAyC;AAAA;;AAClD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,QAAD,CAA1C;AACA,QAAMQ,GAAG,GAAGP,MAAM,CAAC,IAAD,CAAlB;AACA,MAAIQ,IAAI,GAAI,GAAEN,SAAU,GAAEC,QAAS,EAAnC;AACA,MAAIM,mBAAmB,GAAGC,IAAI,CAACC,MAAL,EAA1B;AACA,MAAIC,sBAAsB,GAAGF,IAAI,CAACC,MAAL,EAA7B;;AAEA,QAAME,UAAU,GAAG,MAAM;AACrB,QAAIC,OAAO,GAAGP,GAAG,CAACO,OAAlB;;AACA,QAAI,CAACA,OAAO,CAACC,SAAR,CAAkBC,QAAlB,CAA2B,aAA3B,CAAL,EAAgD;AAC5C,aAAOF,OAAO,CAACC,SAAR,CAAkBE,GAAlB,CAAsB,aAAtB,CAAP;AACH;;AACD,WAAOH,OAAO,CAACC,SAAR,CAAkBG,MAAlB,CAAyB,aAAzB,CAAP;AACH,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,aAAd;AAA4B,MAAA,GAAG,EAAEX,GAAjC;AAAA,gBAAwC,GAAEL,SAAU,IAAGC,QAAS;AAAhE;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAzBD;;GAAMF,I;;KAAAA,I;AA2BN,eAAeA,IAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useState, useRef} from \"react\";\r\n\r\nimport './User.css';\r\n\r\n\r\nconst User = ({firstName, lastName,addActiveUser}) => {\r\n    const [isChecked, setIsChecked] = useState('active');\r\n    const ref = useRef(null);\r\n    let user = `${firstName}${lastName}`;\r\n    let labelForInputActive = Math.random();\r\n    let labelForInputNotActive = Math.random();\r\n\r\n    const activeUser = () => {\r\n        let current = ref.current;\r\n        if (!current.classList.contains('active-text')) {\r\n            return current.classList.add('active-text')\r\n        }\r\n        return current.classList.remove('active-text')\r\n    }\r\n\r\n    return (\r\n        <div className='User'>\r\n            <h3 className='User__title' ref={ref}>{`${firstName} ${lastName}`}</h3>\r\n\r\n            <div className='User_radio'>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;\r\n\r\n// <label htmlFor={labelForInputActive}>\r\n//     <input type=\"radio\"\r\n//            id={labelForInputActive}\r\n//            name='BIRTH'\r\n//            value='active'\r\n//            placeholder='gfrgf'\r\n//            checked={isChecked === 'active'}\r\n//            onChange={(e) => {\r\n//                setIsChecked(e.target.value);\r\n//                activeUser();\r\n//            }}\r\n//     />\r\n//     not active\r\n// </label>\r\n// <label htmlFor={labelForInputNotActive}>\r\n//     <input type=\"radio\"\r\n//            id={labelForInputNotActive}\r\n//            name='BIRTH'\r\n//            value='notActive'\r\n//            checked={isChecked === 'notActive'}\r\n//            onClick={(e) => {\r\n//                setIsChecked(e.target.value)\r\n//                activeUser();\r\n//            }}\r\n//     />\r\n//     active\r\n// </label>"]},"metadata":{},"sourceType":"module"}