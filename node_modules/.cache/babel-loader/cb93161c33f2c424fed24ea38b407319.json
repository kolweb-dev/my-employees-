{"ast":null,"code":"var _jsxFileName = \"D:\\\\Star-db\\\\my-app\\\\src\\\\component\\\\app\\\\app.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport Loader from \"../Loader\";\nimport { loadUsers } from \"../UsersStore\";\nimport PropTypes from 'prop-types';\nimport './app.css';\nimport EmployeeBirthdayList from \"../EmployeerBirthdayList\";\nimport Employees from \"../Emoloyees/Employees\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction isInArray(id, arr) {\n  return arr.some(e => e.id === id);\n}\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeUsers: []\n    };\n\n    this.addActiveUser = obj => {\n      this.setState(prevState => ({ ...prevState,\n        activeUsers: [...prevState.activeUsers, obj]\n      }));\n      let userStore = JSON.parse(localStorage.getItem('redux-store'));\n      let activeUser = userStore.activeUsers;\n      userStore = { ...userStore,\n        activeUsers: [...activeUser, obj]\n      };\n      localStorage.setItem('redux-store', JSON.stringify(userStore));\n    };\n\n    this.removeActiveUser = removeId => {\n      this.setState(prevState => {\n        if (!isInArray(removeId, prevState.activeUsers)) {\n          return;\n        }\n\n        return {\n          activeUsers: prevState.activeUsers.filter(user => user.id !== removeId)\n        };\n      });\n      let userStore = JSON.parse(localStorage.getItem('redux-store'));\n      let activeUser = userStore.activeUsers;\n      let deleteUserIndex = activeUser.findIndex(el => el.id === removeId);\n      console.log(deleteUserIndex);\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.loadUsers();\n  }\n\n  render() {\n    const {\n      activeUsers\n    } = this.state;\n    const {\n      users,\n      isLoading,\n      hasError\n    } = this.props;\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (hasError) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Error occurred!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Employee\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Employee-left\",\n          children: /*#__PURE__*/_jsxDEV(Employees, {\n            users: users,\n            addActiveUser: this.addActiveUser,\n            removeActiveUser: this.removeActiveUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EmployeeBirthdayList, {\n          activeUsers: activeUsers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  isLoading: state.isLoading,\n  hasError: state.hasError\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadUsers: () => dispatch(loadUsers()) // addActiveUser: (user) => dispatch(addActiveUser(user))\n\n}); // const ADD_ACTIVE_USER = 'ADD_ACTIVE_USER';\n//\n// const addActiveUser = (user) =>{\n//     return {\n//         type: ADD_ACTIVE_USER,\n//         payload: user\n//     }\n// }\n\n\nApp.defaultProps = {\n  users: []\n};\nApp.protoType = {\n  users: PropTypes.arrayOf(PropTypes.object),\n  isLoading: PropTypes.bool.isRequired,\n  hasError: PropTypes.bool.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["D:/Star-db/my-app/src/component/app/app.js"],"names":["React","connect","Loader","loadUsers","PropTypes","EmployeeBirthdayList","Employees","isInArray","id","arr","some","e","App","Component","state","activeUsers","addActiveUser","obj","setState","prevState","userStore","JSON","parse","localStorage","getItem","activeUser","setItem","stringify","removeActiveUser","removeId","filter","user","deleteUserIndex","findIndex","el","console","log","componentDidMount","props","render","users","isLoading","hasError","mapStateToProps","mapDispatchToProps","dispatch","defaultProps","protoType","arrayOf","object","bool","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Loader from \"../Loader\";\r\nimport {loadUsers} from \"../UsersStore\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './app.css';\r\nimport EmployeeBirthdayList from \"../EmployeerBirthdayList\";\r\nimport Employees from \"../Emoloyees/Employees\";\r\n\r\n\r\nfunction isInArray(id, arr) {\r\n    return arr.some(e => e.id === id);\r\n}\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        activeUsers: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.loadUsers();\r\n    }\r\n\r\n    addActiveUser = (obj) => {\r\n        this.setState((prevState) => ({\r\n            ...prevState,\r\n            activeUsers: [\r\n                ...prevState.activeUsers,\r\n                obj\r\n            ]\r\n        }))\r\n\r\n        let userStore = JSON.parse(localStorage.getItem('redux-store'));\r\n        let activeUser = userStore.activeUsers;\r\n        userStore = {...userStore, activeUsers: [...activeUser,obj]}\r\n        localStorage.setItem('redux-store',JSON.stringify(userStore))\r\n\r\n    }\r\n\r\n    removeActiveUser = (removeId) => {\r\n        this.setState(prevState => {\r\n            if (!isInArray(removeId, prevState.activeUsers)) {\r\n                return;\r\n            }\r\n\r\n            return {\r\n                activeUsers: prevState.activeUsers.filter(user => user.id !== removeId)\r\n            }\r\n        })\r\n\r\n        let userStore = JSON.parse(localStorage.getItem('redux-store'));\r\n        let activeUser = userStore.activeUsers;\r\n        let deleteUserIndex = activeUser.findIndex(el => el.id === removeId);\r\n\r\n        console.log(deleteUserIndex)\r\n    }\r\n\r\n\r\n    render() {\r\n        const {activeUsers} = this.state;\r\n        const {users, isLoading, hasError} = this.props;\r\n\r\n        if (isLoading) {\r\n            return <Loader/>\r\n        }\r\n        if (hasError) {\r\n            return <p>Error occurred!!!</p>\r\n        }\r\n\r\n\r\n        return (\r\n            <div className='container'>\r\n                <div className='Employee'>\r\n                    <div className='Employee-left'>\r\n                        <Employees\r\n                            users={users}\r\n                            addActiveUser={this.addActiveUser}\r\n                            removeActiveUser={this.removeActiveUser}\r\n                        />\r\n                    </div>\r\n                    <EmployeeBirthdayList activeUsers={activeUsers}/>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.users,\r\n    isLoading: state.isLoading,\r\n    hasError: state.hasError\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    loadUsers: () => dispatch(loadUsers()),\r\n    // addActiveUser: (user) => dispatch(addActiveUser(user))\r\n})\r\n\r\n// const ADD_ACTIVE_USER = 'ADD_ACTIVE_USER';\r\n//\r\n// const addActiveUser = (user) =>{\r\n//     return {\r\n//         type: ADD_ACTIVE_USER,\r\n//         payload: user\r\n//     }\r\n// }\r\n\r\nApp.defaultProps = {\r\n    users: [],\r\n}\r\n\r\nApp.protoType = {\r\n    users: PropTypes.arrayOf(PropTypes.object),\r\n    isLoading: PropTypes.bool.isRequired,\r\n    hasError: PropTypes.bool.isRequired\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}